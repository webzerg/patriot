"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","6315f92eefd1272218e0f097cb5e14e6"],["/static/css/app.e4b650e6.css","982bf1981069d6d094ca94735673ec01"],["/static/js/0.04c20f62.chunk.js","ad08ab14b25a64f1ad1fc7bc164b5e97"],["/static/js/assets.ab7b965d.js","a67090b606e13416db3d3e5ff5ec026c"],["/static/js/d3.eb2519c5.js","e42b4700ed4ac6a01a67c3ea239aa17c"],["/static/js/vendor.3d0335bf.js","670e6f18215c27ddd48a49d4aca47b96"],["/static/media/MacbookPro.bf02f453.png","bf02f453bbb51e1a739b76f244b782ee"],["/static/media/Smartphone.d2d5eae8.png","d2d5eae8b2779d8af1187136b34ff03c"],["/static/media/boyAmerica.1d55b64b.jpg","1d55b64b92aa98e29d0efaee86bbc483"],["/static/media/boyHood.bbfbbf52.jpg","bbfbbf527768742477ae54c208cba365"],["/static/media/boySmileAmerica.ab337674.jpg","ab337674c1d5b3ab4d7b12c69da365db"],["/static/media/brandon.e65f5a8e.png","e65f5a8edda22c2425fbd8dd6f8db71a"],["/static/media/dashboardCalls.75e09fbb.png","75e09fbb9168a1f93ca3e652734074fe"],["/static/media/dashboardHeartbeat.d620637a.png","d620637a39c0dd068cdea791f362268c"],["/static/media/dashboardReports.112002b8.png","112002b83fb253853ab5a37be30a1b28"],["/static/media/dashboardScheduling.1744dc3e.png","1744dc3ecf9debf0810b1999d718ff6c"],["/static/media/dinko.97bff603.png","97bff603475f3e18192b22912d3b7636"],["/static/media/kames.8bd3ba78.jpg","8bd3ba789fc3573cfe76188d2fad7c95"],["/static/media/logo.1a301a1f.png","1a301a1f460ee3b1a7c9149f7ee0bb82"],["/static/media/roboto-v15-latin-regular.16e1d930.woff","16e1d930cf13fb7a956372044b6d02d0"],["/static/media/roboto-v15-latin-regular.38861cba.ttf","38861cba61c66739c1452c3a71e39852"],["/static/media/roboto-v15-latin-regular.7e367be0.woff2","7e367be02cd17a96d513ab74846bafb3"],["/static/media/roboto-v15-latin-regular.9f916e33.eot","9f916e330c478bbfa2a0dd6614042046"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){if(!e.redirected)return Promise.resolve(e);return("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})})},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});